SELECT ROUND(AVG(salary),10) FROM employees;
SELECT MAX(hire_date) FROM employees;
SELECT job_id, AVG(salary) FROM employees GROUP BY job_id ORDER BY AVG(salary);

Part A

Activity 01:

SELECT ROUND(MAX(Salary)) as Maximum, ROUND(MIN(Salary)) as Minimum, ROUND(SUM(Salary)) as Sum, ROUND(AVG(Salary)) as Average
FROM employees;

Activity 02:

SELECT Job_Id as JOB_ID, ROUND(MAX(Salary)) as Maximum, ROUND(MIN(Salary)) as Minimum, ROUND(SUM(Salary)) as Sum, ROUND(AVG(Salary)) as Average 
FROM employees 
GROUP BY Job_Id 
ORDER BY Job_Id;

CREATE TABLE test
    (`col1` int, `col2` int)
;
    
INSERT INTO test
    (`col1`, `col2`)
VALUES
    (1, 2),
    (2, 2),
    (1, 3),
    (2, 2)
;

SELECT * FROM test
GROUP BY col1, col2

No nested group function instead limit.

SELECT AVG(Salary)
FROM employees
GROUP BY department_id
ORDER BY AVG(Salary) DESC
LIMIT 1;

Part B

Activity 01:

SELECT Job_Id JOB_ID, COUNT(Job_Id) 'COUNT(*)'
FROM employees
GROUP BY Job_Id
ORDER BY Job_Id;

Activity 02:

SELECT MANAGER_ID, MIN(SALARY)
FROM employees
GROUP BY Manager_id
HAVING Manager_id IS NOT NULL
AND MIN(SALARY) > 6000
ORDER BY MIN(SALARY) DESC;

Home Work:

SELECT d.Department_Name 'Name', l.City Location, COUNT(Employee_Id) 'Number of People', ROUND(AVG(Salary), 2) Salary
FROM employees e
LEFT OUTER JOIN departments d
ON (e.Department_id = d.Department_id)
LEFT OUTER JOIN locations l
ON (d.Location_id = l.Location_id)
GROUP BY Department_Name;